{"version":3,"sources":["components/Top.js","components/TotalNum.js","components/BarGraphView.js","components/InOut_incDec.js","components/Loading.js","components/BarGraph.js","components/AreaListView.js","components/AreaCircleView.js","components/EachArea.js","components/Footer.js","components/Main.js","components/App.js","index.js"],"names":["Top","date","useState","sliceDate","setSliceDate","splitDate","a","year","substr","month","day","mergeDate","push","useEffect","Container","Title","Empty","Title2","FontDiv","color","icon","faShieldVirus","Day","styled","div","span","TotalNum","api","decidedCnt","setDecideCnt","incDec","setIncDec","Cnt","dayData","find","e","key","defCnt","t1","toString","replace","t2","TitleName","ContentCnt","DecideCnt","IncDecBack","IncDec","faArrowUp","BarGraphView","max","week","setWeek","twoWeek","oneWeek","maxNum","setMaxNum","setMax","i","length","Math","ceil","maxAry","backLine","map","num","index","BackLineli","BackLineItem","oneWeekList","one","BarGraphli","BarGraphitem","style","height","twoWeekList","two","BarGraphli2","SpaceDiv","SubInfo","Content","WeekContent1","onClick","WeekContent2","LineContainer","BarGraphContainer","BarGraphul","BackLineContainer","LineDiv","BackLineUl","props","ul","li","Number","InOut","overFlowCnt","outCnt","setOutCnt","localOccCnt","inCnt","setInCnt","onChange","event","value","target","oneWeekOption","Option","twoWeekOption","Select","defaultValue","faDotCircle","marginRight","OutCnt","InCnt","select","option","Loading","MyCircularProgress","CircularProgress","BarGraph","initial","setInitial","setOneWeek","setTwoWeek","totalArray","mergeData","filter","includes","defDt","sort","b","slice","console","log","Container2","AreaListView","ListView","todayAreaCnt","today","Listli","ListItem","width","paddingLeft","gubun","ListItem2","Listli2","ListTop","ListUl","AreaCircleView","colors","areaName","data","labels","datasets","backgroundColor","hoverBackgroundColor","borderWidth","data2","options","maintainAspectRatio","responsive","legend","display","EachArea","selectView","setSelectView","setTodayAreaCnt","todayCnt","v","createDt","ListViewDiv","ListViewBox","faList","CircleViewBox","faChartPie","ListContainer","Footer","Line","marginBottom","faGithub","size","window","location","href","cursor","Main","App","setDate","setApi","getData","Axios","get","AppContainer","LoadingDiv","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54df5f9c.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { faShieldVirus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Top = ({ date }) => {\r\n  const [sliceDate, setSliceDate] = useState([]);\r\n\r\n  const splitDate = async () => {\r\n    let year = date.substr(0, 4);\r\n    let month = date.substr(4, 2);\r\n    let day = date.substr(6, 2);\r\n    let mergeDate = [];\r\n    await mergeDate.push(year, month, day);\r\n    await setSliceDate(mergeDate);\r\n  };\r\n  useEffect(() => {\r\n    splitDate();\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <Title>\r\n        <span>CORONA </span>\r\n        <Empty></Empty>\r\n        <Title2>LIVE</Title2>\r\n        <FontDiv>\r\n          <FontAwesomeIcon color=\"#A24C62\" icon={faShieldVirus} />\r\n        </FontDiv>\r\n      </Title>\r\n      <Day>\r\n        {sliceDate[0]}년 {sliceDate[1]}월 {sliceDate[2]}일\r\n      </Day>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Top;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  font-size: 20px;\r\n  padding-top: 30px;\r\n  padding-bottom: 30px;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Empty = styled.div`\r\n  width: 10px;\r\n`;\r\n\r\nconst FontDiv = styled.div`\r\n  font-size: 10px;\r\n`;\r\n\r\nconst Day = styled.span`\r\n  padding-top: 30px;\r\n  color: #71747b;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Title2 = styled.span`\r\n  color: #4e5bb5;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst TotalNum = ({ api, date }) => {\r\n  const [decidedCnt, setDecideCnt] = useState(\"\");\r\n  const [incDec, setIncDec] = useState(\"\");\r\n  const Cnt = async () => {\r\n    const t1 = await api.dayData.find((e) => e.key === `${date}Total`).defCnt;\r\n    await setDecideCnt(t1.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\r\n    const t2 = await api.dayData.find((e) => e.key === `${date}Total`).incDec;\r\n    await setIncDec(t2.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    Cnt();\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <TitleName>총 확진자수</TitleName>\r\n      <Empty></Empty>\r\n      <ContentCnt>\r\n        <DecideCnt>{decidedCnt}명</DecideCnt>\r\n        <IncDecBack>\r\n          <IncDec>\r\n            <FontAwesomeIcon icon={faArrowUp} />\r\n            {incDec}\r\n          </IncDec>\r\n        </IncDecBack>\r\n      </ContentCnt>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TotalNum;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  height: 40px;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 8px;\r\n  background-color: #272b38;\r\n  font-size: 20px;\r\n  @media only screen and (max-width: 430px) {\r\n    margin-left: 2.5%;\r\n    margin-right: 2.5%;\r\n    width: 95%;\r\n    font-size: 18.5px;\r\n  }\r\n  @media only screen and (max-width: 410px) {\r\n    font-size: 16.5px;\r\n  }\r\n`;\r\n\r\nconst TitleName = styled.span`\r\n  font-size: 1em;\r\n  color: #4e5bb5;\r\n`;\r\n\r\nconst IncDec = styled.span`\r\n  font-size: 0.75em;\r\n  color: #de5071;\r\n`;\r\nconst IncDecBack = styled.div`\r\n  padding: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 15px;\r\n  background-color: #2a2332;\r\n  border-radius: 8px;\r\n  border-color: #de5071;\r\n`;\r\n\r\nconst DecideCnt = styled.span`\r\n  font-size: 1em;\r\n`;\r\n\r\nconst ContentCnt = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Empty = styled.div`\r\n  width: 50px;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BarGraphView = ({ week, setWeek, twoWeek, oneWeek }) => {\r\n  const [maxNum, setMaxNum] = useState([]);\r\n  let max;\r\n\r\n  const setMax = async () => {\r\n    max = await twoWeek[0].incDec;\r\n    for (let i = 1; i < twoWeek.length; i++) {\r\n      if (max < twoWeek[i].incDec) {\r\n        max = twoWeek[i].incDec;\r\n      }\r\n    }\r\n\r\n    max = (await Math.ceil(max / 100)) * 100;\r\n\r\n    if (max > 1000) {\r\n      while (max % 400 !== 0) {\r\n        max += 100;\r\n      }\r\n    } else if (max > 100) {\r\n      while (max % 400 !== 0) {\r\n        max += 10;\r\n      }\r\n    } else if (max > 10) {\r\n      while (max % 400 !== 0) {\r\n        max += 1;\r\n      }\r\n    }\r\n    let maxAry = await [\r\n      max,\r\n      Math.ceil(max / 1.4 / 100) * 100,\r\n      Math.ceil(max / 2 / 100) * 100,\r\n      Math.ceil(max / 4 / 100) * 100,\r\n      0,\r\n    ];\r\n    await setMaxNum(maxAry);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMax();\r\n  }, []);\r\n\r\n  const backLine = maxNum.map((num, index) => (\r\n    <BackLineli key={index}>\r\n      <BackLineItem></BackLineItem>\r\n      <Number>\r\n        <span>{num}</span>\r\n      </Number>\r\n    </BackLineli>\r\n  ));\r\n\r\n  const oneWeekList = oneWeek.map((one) => (\r\n    <BarGraphli key={one.key}>\r\n      <span>{one.incDec}</span>\r\n      <BarGraphitem\r\n        style={{ height: (one.incDec * 181) / maxNum[0] }}\r\n      ></BarGraphitem>\r\n      <span>{one.day}</span>\r\n    </BarGraphli>\r\n  ));\r\n\r\n  const twoWeekList = twoWeek.map((two, index) => {\r\n    if (index % 2 === 0) {\r\n      return (\r\n        <BarGraphli2 key={two.key}>\r\n          <span>{two.incDec}</span>\r\n          <BarGraphitem\r\n            style={{ height: (two.incDec * 181) / maxNum[0] }}\r\n          ></BarGraphitem>\r\n          <span>{two.day}</span>\r\n        </BarGraphli2>\r\n      );\r\n    } else {\r\n      return (\r\n        <BarGraphli2 key={two.key}>\r\n          <span>{two.incDec}</span>\r\n          <BarGraphitem\r\n            style={{ height: (two.incDec * 181) / maxNum[0] }}\r\n          ></BarGraphitem>\r\n          <SpaceDiv></SpaceDiv>\r\n        </BarGraphli2>\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <SubInfo>\r\n        <Content>일별</Content>\r\n        <div>\r\n          <WeekContent1\r\n            onClick={() => {\r\n              setWeek(false);\r\n            }}\r\n            week={week}\r\n          >\r\n            1주\r\n          </WeekContent1>\r\n          <WeekContent2\r\n            onClick={() => {\r\n              setWeek(true);\r\n            }}\r\n            week={week}\r\n          >\r\n            2주\r\n          </WeekContent2>\r\n        </div>\r\n      </SubInfo>\r\n      <LineContainer style={{ height: max }}>\r\n        {week ? (\r\n          <BarGraphContainer>\r\n            <BarGraphul>{twoWeekList}</BarGraphul>\r\n          </BarGraphContainer>\r\n        ) : (\r\n          <BarGraphContainer>\r\n            <BarGraphul>{oneWeekList}</BarGraphul>\r\n          </BarGraphContainer>\r\n        )}\r\n        <BackLineContainer>\r\n          <LineDiv>\r\n            <BackLineUl>{backLine}</BackLineUl>\r\n          </LineDiv>\r\n        </BackLineContainer>\r\n      </LineContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BarGraphView;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-top: 20px;\r\n  height: 240px;\r\n  @media only screen and (max-width: 430px) {\r\n    margin-left: 2.5%;\r\n    margin-right: 2.5%;\r\n    width: 95%;\r\n  }\r\n`;\r\n\r\nconst SubInfo = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: #5672ea;\r\n`;\r\n\r\nconst Content = styled.span`\r\n  padding: 6px 12px;\r\n  font-weight: bold;\r\n  font-size: 0.75em;\r\n  border-radius: 2.5px;\r\n  background-color: #191f2c;\r\n  border: 1px solid #5672ea;\r\n  cursor: pointer;\r\n  :hover {\r\n    background-color: #2a2332;\r\n  }\r\n`;\r\n\r\nconst WeekContent1 = styled(Content)`\r\n  color: ${(props) => (props.week ? \"#57606f\" : \"#5672ea\")};\r\n  border: ${(props) =>\r\n    props.week ? \"1px solid #57606f\" : \"1px solid #5672ea\"};\r\n  background-color: ${(props) => (props.week ? \"#191F2C\" : \"#1e253b\")};\r\n`;\r\n\r\nconst WeekContent2 = styled(Content)`\r\n  color: ${(props) => (props.week ? \"#5672ea\" : \"#57606f\")};\r\n  border: ${(props) =>\r\n    props.week ? \"1px solid #5672ea\" : \"1px solid #57606f\"};\r\n  background-color: ${(props) => (props.week ? \"#1e253b\" : \"#191F2C\")};\r\n`;\r\n\r\nconst LineContainer = styled.div`\r\n  display: relative;\r\n  width: 100%;\r\n  height: 210px;\r\n`;\r\n\r\nconst BarGraphContainer = styled.div`\r\n  width: 387px;\r\n  height: 194px;\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  @media only screen and (max-width: 430px) {\r\n    width: 88%;\r\n  }\r\n`;\r\n\r\nconst BarGraphul = styled.ul`\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-bottom: 0px;\r\n  border-right: 1px solid;\r\n  border-color: #4b4b4b;\r\n  list-style: none;\r\n  padding: 0px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-end;\r\n  color: rgb(184, 186, 190);\r\n`;\r\n\r\nconst BarGraphli = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  font-size: 10px;\r\n  width: 14%;\r\n  height: 100%;\r\n`;\r\n\r\nconst BarGraphli2 = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  font-size: 10px;\r\n  width: 7%;\r\n  height: 100%;\r\n`;\r\n\r\nconst BarGraphitem = styled.div`\r\n  background-color: rgb(78, 91, 181);\r\n  width: 6px;\r\n`;\r\n\r\nconst SpaceDiv = styled.div`\r\n  width: 1px;\r\n  height: 13px;\r\n`;\r\n\r\nconst BackLineContainer = styled.div`\r\n  margin-top: 9px;\r\n  width: 100%;\r\n  height: 194px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: space-between;\r\n`;\r\n\r\nconst BackLineUl = styled.ul`\r\n  margin: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0px;\r\n  list-style: none;\r\n  flex-direction: column;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst BackLineli = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 10px;\r\n  color: rgb(184, 186, 190);\r\n`;\r\n\r\nconst BackLineItem = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: #4b4b4b;\r\n`;\r\n\r\nconst Number = styled.div`\r\n  display: flex;\r\n  width: 25px;\r\n`;\r\n\r\nconst LineDiv = styled.div`\r\n  width: 100%;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { faDotCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst InOut = ({ week, oneWeek, twoWeek }) => {\r\n  const [outCnt, setOutCnt] = useState(oneWeek[6].overFlowCnt);\r\n  const [inCnt, setInCnt] = useState(oneWeek[6].localOccCnt);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    twoWeek.find((e) => {\r\n      if (e.key === value) {\r\n        setInCnt(e.localOccCnt);\r\n        setOutCnt(e.overFlowCnt);\r\n      }\r\n    });\r\n  };\r\n\r\n  const oneWeekOption = oneWeek.map((one, index) => {\r\n    return (\r\n      <Option key={one.key} value={one.key}>\r\n        {one.day}\r\n      </Option>\r\n    );\r\n  });\r\n  const twoWeekOption = twoWeek.map((two, index) => {\r\n    return (\r\n      <Option key={two.key} value={two.key}>\r\n        {two.day}\r\n      </Option>\r\n    );\r\n  });\r\n  return (\r\n    <Container>\r\n      {week ? (\r\n        <Select defaultValue={twoWeek[13].key} onChange={onChange}>\r\n          {twoWeekOption}\r\n        </Select>\r\n      ) : (\r\n        <Select defaultValue={oneWeek[6].key} onChange={onChange}>\r\n          {oneWeekOption}\r\n        </Select>\r\n      )}\r\n      <div>\r\n        <FontAwesomeIcon\r\n          color=\"#6a6b6f\"\r\n          icon={faDotCircle}\r\n          style={{ marginRight: \"2px\" }}\r\n        />\r\n        <OutCnt>해외 {outCnt}명</OutCnt>\r\n      </div>\r\n      <div>\r\n        <FontAwesomeIcon\r\n          color=\"#4e5bb5\"\r\n          icon={faDotCircle}\r\n          style={{ marginRight: \"2px\" }}\r\n        />\r\n        <InCnt>국내 {inCnt}명</InCnt>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InOut;\r\n\r\nconst Container = styled.div`\r\n  font-size: 15px;\r\n  margin-top: 20px;\r\n  display: flex;\r\n  height: 30px;\r\n  width: 100%;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n  background-color: #272b38;\r\n  @media only screen and (max-width: 430px) {\r\n    margin-left: 2.5%;\r\n    margin-right: 2.5%;\r\n    width: 95%;\r\n  }\r\n`;\r\n\r\nconst Select = styled.select`\r\n  font-size: 0.85em;\r\n  width: 64px;\r\n  border-color: #272b38;\r\n  background-color: #272b38;\r\n  color: rgb(207, 207, 207);\r\n`;\r\n\r\nconst Option = styled.option`\r\n  background-color: #272b38;\r\n  color: rgb(207, 207, 207);\r\n`;\r\n\r\nconst OutCnt = styled.span`\r\n  color: #6a6b6f;\r\n`;\r\n\r\nconst InCnt = styled.span`\r\n  color: #4e5bb5;\r\n`;\r\n","import React from \"react\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { styled } from \"@material-ui/core/styles\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div>\r\n      <MyCircularProgress color=\"secondary\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n\r\nconst MyCircularProgress = styled(CircularProgress)`\r\n  display: flex;\r\n  flex-direction: center;\r\n  align-items: center;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BarGraphView from \"./BarGraphView\";\r\nimport InOut from \"./InOut_incDec\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst BarGraph = ({ api }) => {\r\n  const [initial, setInitial] = useState(false);\r\n  const [week, setWeek] = useState(false);\r\n  const [oneWeek, setOneWeek] = useState([]);\r\n  const [twoWeek, setTwoWeek] = useState([]);\r\n\r\n  let totalArray = [];\r\n\r\n  const mergeData = async () => {\r\n    try {\r\n      await api.dayData.filter((e) => {\r\n        if (e.key.includes(\"Total\") === true) {\r\n          totalArray.push({\r\n            key: e.key,\r\n            incDec: e.incDec,\r\n            day: e.defDt,\r\n            localOccCnt: e.localOccCnt,\r\n            overFlowCnt: e.overFlowCnt,\r\n          });\r\n        }\r\n        return true;\r\n      });\r\n      totalArray = await totalArray.sort((a, b) => {\r\n        if (a.key > b.key) {\r\n          return 1;\r\n        }\r\n        if (a.key < b.key) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n      await setOneWeek(totalArray.slice(7, 14));\r\n      await setTwoWeek(totalArray);\r\n      await setInitial(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    mergeData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      {initial ? (\r\n        <Container2>\r\n          <BarGraphView\r\n            twoWeek={twoWeek}\r\n            oneWeek={oneWeek}\r\n            week={week}\r\n            setWeek={setWeek}\r\n          />\r\n          <InOut api={api} week={week} oneWeek={oneWeek} twoWeek={twoWeek} />\r\n        </Container2>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BarGraph;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst Container2 = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst AreaListView = ({ todayAreaCnt }) => {\r\n  const ListView = todayAreaCnt.map((today, index) => {\r\n    if (index % 2 === 0) {\r\n      return (\r\n        <Listli key={today.key}>\r\n          <ListItem style={{ width: \"50%\", color: \"#dfe4ea\" }}>\r\n            <span style={{ paddingLeft: \"25px\" }}>{today.gubun}</span>\r\n          </ListItem>\r\n\r\n          <ListItem2 style={{ width: \"25%\", color: \"#B8B7B9\" }}>\r\n            <span>\r\n              {today.defCnt.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}명\r\n            </span>\r\n          </ListItem2>\r\n\r\n          <ListItem2 style={{ width: \"25%\", color: \"#de5071\" }}>\r\n            <FontAwesomeIcon icon={faArrowUp} />\r\n            <span>\r\n              {today.incDec.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}명\r\n            </span>\r\n          </ListItem2>\r\n        </Listli>\r\n      );\r\n    } else {\r\n      return (\r\n        <Listli2 key={today.key}>\r\n          <ListItem style={{ width: \"50%\", color: \"#dfe4ea\" }}>\r\n            <span style={{ paddingLeft: \"25px\" }}>{today.gubun}</span>\r\n          </ListItem>\r\n\r\n          <ListItem2 style={{ width: \"25%\", color: \"#B8B7B9\" }}>\r\n            <span>\r\n              {today.defCnt.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}명\r\n            </span>\r\n          </ListItem2>\r\n\r\n          <ListItem2 style={{ width: \"25%\", color: \"#de5071\" }}>\r\n            <FontAwesomeIcon icon={faArrowUp} />\r\n            <span>\r\n              {today.incDec.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}명\r\n            </span>\r\n          </ListItem2>\r\n        </Listli2>\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <ListTop>\r\n        <ListItem style={{ width: \"50%\" }}>\r\n          <span style={{ paddingLeft: \"25px\" }}>지역</span>\r\n        </ListItem>\r\n\r\n        <ListItem2 style={{ width: \"25%\" }}>\r\n          <span>총 확진자수</span>\r\n        </ListItem2>\r\n\r\n        <ListItem2 style={{ width: \"25%\" }}>\r\n          <span>증가수</span>\r\n        </ListItem2>\r\n      </ListTop>\r\n\r\n      <ListItem>\r\n        <ListUl>{ListView}</ListUl>\r\n      </ListItem>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AreaListView;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  font-size: 15px;\r\n`;\r\n\r\nconst ListTop = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-weight: 200;\r\n  color: rgb(130, 130, 132);\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 6px;\r\n  @media only screen and (max-width: 410px) {\r\n    font-size: 0.8em;\r\n  }\r\n`;\r\n\r\nconst ListItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst ListItem2 = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ListUl = styled.ul`\r\n  width: 100%;\r\n  list-style: none;\r\n  padding: 0px;\r\n  font-size: 15px;\r\n  font-weight: 200;\r\n`;\r\n\r\nconst Listli = styled.li`\r\n  width: 100%;\r\n  height: 48px;\r\n  display: flex;\r\n  border-radius: 10px;\r\n  background-color: #272b38;\r\n`;\r\n\r\nconst Listli2 = styled.li`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 48px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nconst AreaCircleView = ({ todayAreaCnt }) => {\r\n  const colors = [\r\n    \"#ED4C67\",\r\n    \"#0652DD\",\r\n    \"#FFC312\",\r\n    \"#009432\",\r\n    \"#12CBC4\",\r\n    \"#FDA7DF\",\r\n    \"#F79F1F\",\r\n    \"#A3CB38\",\r\n    \"#1289A7\",\r\n    \"#C4E538\",\r\n    \"#D980FA\",\r\n    \"#B53471\",\r\n    \"#EE5A24\",\r\n    \"#EA2027\",\r\n    \"#9980FA\",\r\n    \"#833471\",\r\n    \"#006266\",\r\n  ];\r\n  const areaName = todayAreaCnt.map((e) => e.gubun);\r\n  const incDecData = todayAreaCnt.map((e) => e.incDec);\r\n  const totalData = todayAreaCnt.map((e) => e.defCnt);\r\n\r\n  const data = {\r\n    labels: areaName,\r\n    datasets: [\r\n      {\r\n        data: incDecData,\r\n        backgroundColor: colors,\r\n        hoverBackgroundColor: colors,\r\n        borderWidth: 0,\r\n      },\r\n    ],\r\n  };\r\n  const data2 = {\r\n    labels: areaName,\r\n    datasets: [\r\n      {\r\n        data: totalData,\r\n        backgroundColor: colors,\r\n        hoverBackgroundColor: colors,\r\n        borderWidth: 0,\r\n      },\r\n    ],\r\n  };\r\n  const options1 = {\r\n    maintainAspectRatio: false,\r\n    responsive: false,\r\n    legend: {\r\n      display: true,\r\n    },\r\n  };\r\n  const options2 = {\r\n    maintainAspectRatio: false,\r\n    responsive: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n  };\r\n  return (\r\n    <Container>\r\n      {/* <LabelDiv>\r\n        <Doughnut data={data3} options={options1} />\r\n      </LabelDiv> */}\r\n      <Doughnut data={data} width={370} height={380} options={options1} />\r\n      <p style={{ color: \"rgb(207, 207, 207)\" }}>[ 일일 발생 환자 ]</p>\r\n      <Doughnut data={data2} width={370} height={268} options={options2} />\r\n      <p style={{ color: \"rgb(207, 207, 207)\" }}>[ 총 발생 환자 ]</p>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AreaCircleView;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  align-items: center;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { faList, faChartPie } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport AreaListView from \"./AreaListView\";\r\nimport AreaCircleView from \"./AreaCircleView\";\r\n\r\nconst EachArea = ({ api }) => {\r\n  const [selectView, setSelectView] = useState(true);\r\n  const [todayAreaCnt, setTodayAreaCnt] = useState([]);\r\n\r\n  const todayCnt = async () => {\r\n    let today = [];\r\n    await api.dayData.map((v) => {\r\n      if (v.createDt === api.date) {\r\n        return today.push(v);\r\n      }\r\n      return 0;\r\n    });\r\n    today = await today.slice(1, 18).sort((a, b) => {\r\n      return b.incDec - a.incDec;\r\n    });\r\n\r\n    await setTodayAreaCnt(today);\r\n  };\r\n  useEffect(() => {\r\n    todayCnt();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <ListViewDiv>\r\n        <ListViewBox\r\n          onClick={() => setSelectView(true)}\r\n          selectView={selectView}\r\n        >\r\n          <FontAwesomeIcon icon={faList} />\r\n          <span>지역별 표</span>\r\n        </ListViewBox>\r\n        <CircleViewBox\r\n          onClick={() => setSelectView(false)}\r\n          selectView={selectView}\r\n        >\r\n          <FontAwesomeIcon icon={faChartPie} />\r\n          <span>지역별 분포</span>\r\n        </CircleViewBox>\r\n      </ListViewDiv>\r\n      <ListContainer>\r\n        {selectView ? (\r\n          <AreaListView todayAreaCnt={todayAreaCnt} />\r\n        ) : (\r\n          <AreaCircleView todayAreaCnt={todayAreaCnt} />\r\n        )}\r\n      </ListContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EachArea;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-top: 20px;\r\n  font-size: 12px;\r\n  @media only screen and (max-width: 430px) {\r\n    margin-left: 2.5%;\r\n    margin-right: 2.5%;\r\n    width: 95%;\r\n    font-size: 10px;\r\n  }\r\n`;\r\n\r\nconst ListViewDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  ::before {\r\n    content: \"\";\r\n    height: 1px;\r\n    background: rgba(130, 130, 132, 0.19);\r\n    width: 100%;\r\n  }\r\n  ::after {\r\n    content: \"\";\r\n    height: 1px;\r\n    background: rgba(130, 130, 132, 0.19);\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst ListViewBox = styled.div`\r\n  width: 300px;\r\n  font-weight: 600;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-content: center;\r\n  align-items: center;\r\n  padding: 6px 10px;\r\n  border-bottom-left-radius: 2.5px;\r\n  border-top-left-radius: 2.5px;\r\n  color: ${(props) => (props.selectView ? \"#5672ea\" : \"#57606f\")};\r\n  border: ${(props) =>\r\n    props.selectView ? \"1px solid #5672ea\" : \"1px solid #57606f\"};\r\n  background-color: ${(props) => (props.selectView ? \"#1e253b\" : \"#191F2C\")};\r\n  cursor: pointer;\r\n  :hover {\r\n    background-color: #2a2332;\r\n  }\r\n`;\r\n\r\nconst CircleViewBox = styled.div`\r\n  width: 355px;\r\n  font-weight: 600;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-content: center;\r\n  align-items: center;\r\n  color: ${(props) => (props.selectView ? \"#57606f\" : \"#5672ea\")};\r\n  border: ${(props) =>\r\n    props.selectView ? \"1px solid #57606f\" : \"1px solid #5672ea\"};\r\n  background-color: ${(props) => (props.selectView ? \"#191F2C\" : \"#1e253b\")};\r\n  cursor: pointer;\r\n  padding: 6px 10px;\r\n  border-bottom-right-radius: 2.5px;\r\n  border-top-right-radius: 2.5px;\r\n\r\n  cursor: pointer;\r\n  :hover {\r\n    background-color: #2a2332;\r\n  }\r\n`;\r\n\r\nconst ListContainer = styled.div`\r\n  margin-top: 20px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Footer = () => {\r\n  const githubClick = () => {\r\n    window.location.href = \"https://github.com/seonggul/corona_live\";\r\n  };\r\n  return (\r\n    <Container>\r\n      <Line></Line>\r\n      <Content>\r\n        <span style={{ marginBottom: \"5px\" }}>개발자</span>\r\n        <span style={{ color: \"#aaa69d\", marginBottom: \"15px\" }}>강 성 걸</span>\r\n        <span style={{ marginBottom: \"5px\" }}>문의 및 개선사항</span>\r\n        <span style={{ color: \"#aaa69d\", marginBottom: \"15px\" }}>\r\n          gul930429@gmail.com\r\n        </span>\r\n        <FontAwesomeIcon\r\n          icon={faGithub}\r\n          size=\"2x\"\r\n          onClick={githubClick}\r\n          style={{ cursor: \"pointer\" }}\r\n        />\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n\r\nconst Container = styled.div`\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst Line = styled.div`\r\n  height: 1px;\r\n  width: 90vw;\r\n  background-color: #747d8c;\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #71747b;\r\n  margin-top: 20px;\r\n  margin-bottom: 30px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Top from \"./Top\";\r\nimport TotalNum from \"./TotalNum\";\r\nimport BarGraph from \"./BarGraph\";\r\nimport EachArea from \"./EachArea\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst Main = ({ api, date }) => {\r\n  return (\r\n    <Container>\r\n      <Container2>\r\n        <Top date={date} />\r\n        <TotalNum api={api} date={date} />\r\n        <BarGraph api={api} />\r\n        <EachArea api={api} date={date} />\r\n      </Container2>\r\n      <>\r\n        <Footer />\r\n      </>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  color: white;\r\n  align-items: center;\r\n`;\r\n\r\nconst Container2 = styled.div`\r\n  display: flex;\r\n  width: 430px;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  color: white;\r\n  border: 5px;\r\n  @media only screen and (max-width: 430px) {\r\n    width: 100vw;\r\n    height: 100%;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport Main from \"./Main\";\nimport Axios from \"axios\";\nimport Loading from \"./Loading\";\n\nconst App = () => {\n  const [date, setDate] = useState();\n  const [api, setApi] = useState();\n  const [initial, setInitial] = useState(false);\n\n  const getData = async () => {\n    let data;\n    try {\n      data = await Axios.get(\"https://nodecorona.herokuapp.com/\");\n\n      setApi(data.data);\n      setDate(data.data.date);\n    } catch (error) {\n      console.log(error);\n    }\n\n    setInitial(true);\n  };\n  useEffect(() => {\n    return getData();\n  }, []);\n\n  return (\n    <AppContainer>\n      {initial ? (\n        <Main api={api} date={date} />\n      ) : (\n        <LoadingDiv>\n          <Loading />\n        </LoadingDiv>\n      )}\n    </AppContainer>\n  );\n};\n\nexport default App;\n\nconst AppContainer = styled.div`\n  display: flex;\n  background-color: #191f2c;\n  width: 100vw;\n  height: 100%;\n  justify-content: center;\n`;\n\nconst LoadingDiv = styled.div`\n  display: flex;\n  background-color: #191f2c;\n  width: 100vw;\n  height: 100vh;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}